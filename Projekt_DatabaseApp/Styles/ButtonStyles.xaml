<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Button-->
        <Setter Property="Margin" Value="0, 0, 0, 5"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource unmarkedButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Mouse is over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource activeButton}"/>
                <Setter Property="Foreground" Value="{StaticResource markedButton}"/>
            </Trigger>

            <!--Button is active-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource activeButton}"/>
                <Setter Property="Foreground" Value="{StaticResource c1}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Nav Button Text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="30, 0, 0, 0"/>
    </Style>

    <!--Control Batton-->
    <Style x:Key="CtrlButton" TargetType="Button">
        <!--Button-->
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="{StaticResource activeButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Mouse is over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--ProfButton-->
    <Style x:Key="profButton" TargetType="Button">
        <!--Button-->
        <Setter Property="Margin" Value="0, 0, 10, 0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource unmarkedButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Mouse is over-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource markedButton}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>